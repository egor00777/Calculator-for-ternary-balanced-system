# Form implementation generated from reading ui file 'mm.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import numexpr as ne
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QThread,pyqtSignal

     






class Ui_MainWindow(object):

    def __init__(self):
        super().__init__()    
        self.thread = Starting_pack()
        self.thread.start()
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 600)
        MainWindow.setMinimumSize(QtCore.QSize(500, 600))
        MainWindow.setMaximumSize(QtCore.QSize(500, 600))
        MainWindow.setStyleSheet("background-color: #696969;\n"
"")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("background-color: #696969")
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(20, 10, 461, 521))
        self.widget.setStyleSheet("background-color: #808080;\n"
"border-radius: 10%;")
        self.widget.setObjectName("widget")
        self.Answer_nor = QtWidgets.QLabel(parent=self.widget)
        self.Answer_nor.setGeometry(QtCore.QRect(20, 140, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.Answer_nor.setFont(font)
        self.Answer_nor.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.Answer_nor.setObjectName("Answer_nor")
        self.Answer_tree = QtWidgets.QLabel(parent=self.widget)
        self.Answer_tree.setGeometry(QtCore.QRect(240, 140, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        font.setUnderline(False)
        self.Answer_tree.setFont(font)
        self.Answer_tree.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.Answer_tree.setObjectName("Answer_tree")
        self.pushButton = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton.setGeometry(QtCore.QRect(20, 210, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_4.setGeometry(QtCore.QRect(130, 210, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_2.setGeometry(QtCore.QRect(240, 210, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_5.setGeometry(QtCore.QRect(350, 210, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_22 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_22.setGeometry(QtCore.QRect(130, 330, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_22.setFont(font)
        self.pushButton_22.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_22.setObjectName("pushButton_22")
        self.pushButton_23 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_23.setGeometry(QtCore.QRect(130, 270, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_23.setFont(font)
        self.pushButton_23.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_23.setObjectName("pushButton_23")
        self.pushButton_24 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_24.setGeometry(QtCore.QRect(240, 270, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_24.setFont(font)
        self.pushButton_24.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_24.setObjectName("pushButton_24")
        self.pushButton_25 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_25.setGeometry(QtCore.QRect(350, 390, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_25.setFont(font)
        self.pushButton_25.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_25.setObjectName("pushButton_25")
        self.pushButton_27 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_27.setGeometry(QtCore.QRect(350, 270, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_27.setFont(font)
        self.pushButton_27.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_27.setObjectName("pushButton_27")
        self.pushButton_28 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_28.setGeometry(QtCore.QRect(130, 390, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_28.setFont(font)
        self.pushButton_28.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_28.setObjectName("pushButton_28")
        self.pushButton_29 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_29.setGeometry(QtCore.QRect(240, 390, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_29.setFont(font)
        self.pushButton_29.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_29.setObjectName("pushButton_29")
        self.pushButton_30 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_30.setGeometry(QtCore.QRect(350, 450, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_30.setFont(font)
        self.pushButton_30.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_30.setObjectName("pushButton_30")
        self.pushButton_31 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_31.setGeometry(QtCore.QRect(20, 270, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_31.setFont(font)
        self.pushButton_31.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_31.setObjectName("pushButton_31")
        self.pushButton_32 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_32.setGeometry(QtCore.QRect(20, 450, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_32.setFont(font)
        self.pushButton_32.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_32.setObjectName("pushButton_32")
        self.pushButton_33 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_33.setGeometry(QtCore.QRect(240, 330, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_33.setFont(font)
        self.pushButton_33.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_33.setObjectName("pushButton_33")
        self.pushButton_34 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_34.setGeometry(QtCore.QRect(20, 390, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_34.setFont(font)
        self.pushButton_34.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_34.setObjectName("pushButton_34")
        self.pushButton_35 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_35.setGeometry(QtCore.QRect(350, 330, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_35.setFont(font)
        self.pushButton_35.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_35.setObjectName("pushButton_35")
        self.pushButton_36 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_36.setGeometry(QtCore.QRect(20, 330, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.pushButton_36.setFont(font)
        self.pushButton_36.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.pushButton_36.setObjectName("pushButton_36")
        self.Label_nor = QtWidgets.QLabel(parent=self.widget)
        self.Label_nor.setGeometry(QtCore.QRect(20, 20, 421, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.Label_nor.setFont(font)
        self.Label_nor.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.Label_nor.setObjectName("Label_nor")
        self.Label_tree = QtWidgets.QLabel(parent=self.widget)
        self.Label_tree.setGeometry(QtCore.QRect(20, 80, 421, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(15)
        font.setBold(True)
        self.Label_tree.setFont(font)
        self.Label_tree.setStyleSheet("background-color: #D3D3D3;\n"
"border-radius: 15%;\n"
"color: #FFFFFF;")
        self.Label_tree.setObjectName("Label_tree")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.func()
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Answer_nor.setText(_translate("MainWindow", "0"))
        self.thread.item1.connect(self.Answer_nor.setText)
        self.Answer_tree.setText(_translate("MainWindow", "0"))
        self.thread.item2.connect(self.Answer_tree.setText)
        self.pushButton.setText(_translate("MainWindow", "C"))
        self.pushButton_4.setText(_translate("MainWindow", "Del"))
        self.pushButton_2.setText(_translate("MainWindow", "%"))
        self.pushButton_5.setText(_translate("MainWindow", "/"))
        self.pushButton_22.setText(_translate("MainWindow", "5"))
        self.pushButton_23.setText(_translate("MainWindow", "2"))
        self.pushButton_24.setText(_translate("MainWindow", "3"))
        self.pushButton_25.setText(_translate("MainWindow", "+"))
        self.pushButton_27.setText(_translate("MainWindow", "*"))
        self.pushButton_28.setText(_translate("MainWindow", "8"))
        self.pushButton_29.setText(_translate("MainWindow", "9"))
        self.pushButton_30.setText(_translate("MainWindow", "="))
        self.pushButton_31.setText(_translate("MainWindow", "1"))
        self.pushButton_32.setText(_translate("MainWindow", "0"))
        self.pushButton_33.setText(_translate("MainWindow", "6"))
        self.pushButton_34.setText(_translate("MainWindow", "7"))
        self.pushButton_35.setText(_translate("MainWindow", "-"))
        self.pushButton_36.setText(_translate("MainWindow", "4"))
        self.Label_nor.setText(_translate("MainWindow", "0"))
        self.Label_tree.setText(_translate("MainWindow", "0"))

    # привязка кнопок
    def func(self):
        self.pushButton_22.clicked.connect(lambda: self.add_digit('5'))
        self.pushButton_23.clicked.connect(lambda: self.add_digit('2'))
        self.pushButton_24.clicked.connect(lambda: self.add_digit('3'))
        self.pushButton_28.clicked.connect(lambda: self.add_digit('8'))
        self.pushButton_29.clicked.connect(lambda: self.add_digit('9'))
        self.pushButton_31.clicked.connect(lambda: self.add_digit('1'))
        self.pushButton_32.clicked.connect(lambda: self.add_digit('0'))
        self.pushButton_33.clicked.connect(lambda: self.add_digit('6'))
        self.pushButton_34.clicked.connect(lambda: self.add_digit('7'))
        self.pushButton_36.clicked.connect(lambda: self.add_digit('4'))

        self.pushButton_2.clicked.connect(lambda: self.add_digit('%'))
        self.pushButton_5.clicked.connect(lambda: self.add_digit('/'))
        self.pushButton_25.clicked.connect(lambda: self.add_digit('+'))
        self.pushButton_27.clicked.connect(lambda: self.add_digit('*'))
        self.pushButton_35.clicked.connect(lambda: self.add_digit('-'))


        self.pushButton_4.clicked.connect(self.delite)
        self.pushButton.clicked.connect(self.sbros)
    # ввод цифр
    def add_digit(self, btn_text: str) -> None:
        if self.Label_nor.text() == '0':
            self.Label_nor.setText(btn_text)
            self.Label_tree.setText(self.tree(btn_text))

            self.thread.item0=self.Label_nor.text()
        elif btn_text in ['%','/','*','+','-']:
            self.Label_nor.setText(self.Label_nor.text() + btn_text)
            self.Label_tree.setText(self.Label_tree.text() + btn_text)
            self.thread.item0=self.Label_nor.text()

        else:
            if  '%' in self.Label_nor.text() or '/' in self.Label_nor.text() or '*' in self.Label_nor.text() or '+' in self.Label_nor.text() or '-' in self.Label_nor.text():
                self.Label_nor.setText(self.Label_nor.text() + btn_text)
                a=self.Label_nor.text()
                for i in ['%','/','*','+','-']:
                    a=a.replace(i,' ')
                a=a.split(' ')
                b=self.Label_tree.text()
                for i in ['%','/','*','+','-']:
                    b=b.replace(i,' ')
                b=b.split(' ')
                
                b=str(self.Label_tree.text())[:len(''.join(b[:-1]))+len(b)-1]

                self.Label_tree.setText(b+self.tree(a[-1]))
                self.thread.item0=self.Label_nor.text()



            else:   
                self.Label_nor.setText(self.Label_nor.text() + btn_text)
                self.Label_tree.setText(self.tree(self.Label_nor.text()))
                self.thread.item0=self.Label_nor.text()

    # перевод в троичную систему
    def tree(self,x):
        x=int(x)
        s=''
        while x>0:
            s=str(x%3)+s
            x//=3
        return s
    # кнопка del
    def delite(self, btn_text: str)-> None:
        if self.Label_nor.text() != '0':
                self.Label_nor.setText(str(self.Label_nor.text())[:-1])
                a=self.Label_nor.text()
                for i in ['%','/','*','+','-']:
                    a=a.replace(i,' ')
                a=a.split(' ')
                b=self.Label_tree.text()
                for i in ['%','/','*','+','-']:
                    b=b.replace(i,' ')
                b=b.split(' ')

                b=str(self.Label_tree.text())[:len(''.join(b[:-1]))+len(b)-1]

                self.Label_tree.setText(b+self.tree(a[-1]))

                self.thread.item0=self.Label_nor.text()
    # кнопка сброса
    def sbros(self):
        
        self.Label_nor.setText('0')
        self.Label_tree.setText('0')
        
        self.thread.item0=self.Label_nor.text()

# класс для бесконечного цикла через сигналы
class Starting_pack(QThread):
        item0='0'
        item1=pyqtSignal(str)
        item2=pyqtSignal(str)
        

        def __init__(self):
                super().__init__()
                
                
        def run(self):
                # Подсчет ответа в реальном времени
                def tree(x):
                        x=int(x)
                        s=''
                        while x>0:
                                s=str(x%3)+s
                                x//=3
                        return s
                
                import time
                while True:
                        a=self.item0
                        try:
                                answer=str(ne.evaluate(a))
                        except:
                             answer='0'
                        if answer[:-2]!='.0':
                                if answer !='0':
                                        try:
                                                self.item1.emit(answer)
                                                answer= (str(answer).split('.'))[0]
                                                self.item2.emit(tree(answer)) 
                                        except:
                                                self.item1.emit('0')
                                                self.item2.emit('0')
                                else:
                                        self.item1.emit('0')
                                        self.item2.emit('0')
                        else:
                                answer=answer[:-2]
                                if answer!='0':
                                        
                                        try:
                                                self.item1.emit(answer)
                                                self.item2.emit(tree(answer))
                                        except:
                                                self.item1.emit('0')
                                                self.item2.emit('0')
                                else:
                                        self.item1.emit('0')
                                        self.item2.emit('0')
                        del a
                        time.sleep(0.2)
                        
if __name__ == "__main__":
    # Запуск приложения
    from sys import argv, exit
    app = QtWidgets.QApplication(argv)
    
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    exit(app.exec())
    